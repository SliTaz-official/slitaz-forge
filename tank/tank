#!/bin/sh
# Tank - Admin Tank, backup, update and give stats.
#
# (C) 2011 SliTaz - GNU General Public License.
# Author: Christophe Lincoln <pankso@slitaz.org>
#

REPOS="/home/slitaz/repos"
WWW="/home/slitaz/www"
VHOST="$WWW/tank"
WEBSITE="$WWW/website"
BACKUPS="/home/backups"
PYTHON_LIB="/usr/lib/python2.5"
DOC_LIB="$WWW/doc/lib"

usage() {
	echo -e "\nUsage: `basename $0` [command]
Commands:
  stats|-s     Display some Tank stats
  backup|-b    Backup files and MySQL DB
  adduser      Add user on Tank and create people files
  chroot|-c    Move a user into a new chroot location
  up-stats     Update Awstats statistics (run by cron)
  
  up-tank      Update http://tank.slitaz.org/
  up-people    Update http://people.slitaz.org/
  up-pro       Update http://pro.slitaz.org/
  up-boot      Update http://boot.slitaz.org/
  up-cook      Update http://cook.slitaz.org/
  
  #up-www       Update website http://www.slitaz.org/
  #up-hg        Update template for http://hg.slitaz.org/
  #up-doc       Update template for http://doc.slitaz.org/\n"
}

case "$1" in
	stats|-s)
		# Report some stats
		clear
		cat << EOF

Connected user
--------------
`who`

System usage
------------
`df -h`

`free`

EOF
		;;
	chroot|-c)
		# Move a user into a new chroot location
		if [ -s $2/bin/sh ] && grep -qs $3: /etc/password ; then
			grep -q ^chroot /etc/busybox.conf ||
			echo 'chroot = ssx root.root' >> /etc/busybox.conf
			[ -s /bin/chrootsh ] || cat > /bin/chrootsh << EOF
#!/bin/sh

#case " \$@ " in                                        
#*rsync*) exec /bin/sh "\$@" ;;
#esac

case "\$USER" in                                        
pankso) exec /bin/sh "\$@" ;;                      
*) exec /usr/sbin/chroot $2 /bin/chrootsh "\$@" ;;
esac
EOF
			[ -s $2/bin/chrootsh ] || cat > $2/bin/chrootsh << EOF
#!/bin/sh

export SHELL='/bin/sh'
cd \$HOME
. /etc/profile
exec /bin/sh "\$@"
EOF
			chmod +x /bin/chrootsh $2/bin/chrootsh
			base=$(awk -F: "/^$3:/ { print \$6 }" /etc/passwd)
			target=$base
			while [ -L $target ]; do
				target=$(readlink $target)
			done
			mv $target $2/$base
			[ -L $base ] && rm -f $base
			ln -s $2/$base $base
			if ! grep -q ^$3: $2/etc/passwd ; then
				grep ^$3: /etc/passwd >> $2/etc/passwd
				grep ^$3: /etc/shadow >> $2/etc/shadow		fi
			fi
		else
			cat << EOF
Usage: $0 $1 newchroot user
Move a user in a new chroot location
EOF
		fi ;;
	backup|-b)
		# Backup config files and SQL db.
		echo "TODO" ;;
	up-www)
		# Update website from repo.
		echo -e "\nUpdating: www.slitaz.org..."
		cd $WEBSITE && hg pull -u
		echo "" ;;
	up-tank)
		# Update Tank web interface: http://tank.slitaz.org/
		echo -e "\nUpdating: tank.slitaz.org..."
		cd $REPOS/slitaz-forge
		hg pull -u
		rm -rf $VHOST/*.* $VHOST/images
		cp -a tank/web/* $VHOST 
		echo "" ;;
	up-people)
		# Update People web interface: http://people.slitaz.org/
		echo -e "\nUpdating: people.slitaz.org..."
		cd $REPOS/slitaz-forge
		hg pull -u
		rm -rf $WWW/people/*
		cp -a people/* $WWW/people 
		echo "" ;;
	up-pro)
		# Update Pro website: http://pro.slitaz.org/
		echo -e "\nUpdating: pro.slitaz.org..."
		cd $REPOS/slitaz-forge
		hg pull -u
		rm -rf $WWW/pro/*
		cp -a pro/* $WWW/pro
		echo "" ;;
	up-boot)
		# Update Web Boot interface: http://boot.slitaz.org/
		echo -e "\nUpdating: boot.slitaz.org..."
		cd $REPOS/slitaz-forge
		hg pull -u
		rm -rf $WWW/boot/*
		cp -a boot/* $WWW/boot 
		echo "" ;;
	up-cook)
		# Update Web Boot interface: http://boot.slitaz.org/
		echo -e "\nUpdating: cook.slitaz.org..."
		cd $REPOS/slitaz-forge
		hg pull -u
		cp -a cook/* $WWW/cook
		cp -a cook/* $WWW/cook/undigest
		echo "" ;;
	up-hg)
		# Since Tank runs stable and we update the style in slitaz-dev-tools
		# the cooking package is unbuildable because it uses the new Tazwok function
		# with mercurial|*
		echo -e "\nUpdating Mercurial template..."
		cd $REPOS/slitaz-dev-tools && hg pull -u
		cp -a slitaz-mercurial-style/* $PYTHON_LIB/site-packages/mercurial
		chown -R root.root $PYTHON_LIB/site-packages/mercurial/templates
		echo "" ;;
	up-doc)
		# Update Wiki doc template from Hg: http://doc.slitaz.org/
		echo -e "\nUpdating Wiki documentation template..."
		cd $REPOS/slitaz-forge && hg pull -u
		cp -a doc/lib/tpl/* $DOC_LIB/tpl
		echo "" ;;
	up-stats)
		echo -e "\nUpdating all awstats databases..."
		for vh in pro boot cook
		do
			/var/www/cgi-bin/awstats.pl -config=$vh.slitaz.org 
		done
		echo "" ;;
	adduser)
		# On Tank /etc/skel is empty to let tank handle default user
		# files.
		echo ""
		if [ -n "$2" ]; then
			user=$2
		else
			echo -n "User name: " && read user
		fi
		if [ -d /home/$user ]; then
			echo -e "User $user already exists...\n" && exit 1
		fi
		echo "Adding user: $user"
		# adduser -s /bin/sh -g "SliTaz User" -G users -h /home/$user $user # for cooking
		adduser $user
		# HG access
		echo -n "Hg password: " && read passwd
		echo "$user:$passwd" >> /etc/lighttpd/plain.passwd
		# Public dir at http://people.slitaz.org/~$user/
		cp -a /usr/share/tank/Public/* /home/$user/Public
		sed -i s/'%user%'/"$user"/ /home/$user/Public/index.html
		# README and empty Shell profile
		cp -a /usr/share/tank/README /home/$user/
		cat > /home/$user/.profile << EOF
# ~/.profile: Executed by Bourne-compatible login SHells.
#
EOF
		chown -R $user.$user /home/$user
		echo -e "Done\n" ;;
	*)
		usage ;;
esac
exit 0
